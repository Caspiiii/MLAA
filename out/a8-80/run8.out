EADARP version 2def-dirty
ARGS: --ifile=EADARP/instances/l1/a8-80.txt --odir=EADARP/out/a8-80 --oname=run8
Settings:
--alns_gamma=0.025
--alns_segment_size=100
--alns_sigma1=10
--alns_sigma2=9
--alns_sigma3=3
--at_most_one_s=false
--gamma=-1.0
--ifile=EADARP/instances/l1/a8-80.txt
--insert_charging_otf=true
--insert_cost_noise=0.014
--lns_init_temp_factor=0.0
--lns_temp_dec_factor=0.99
--mh_checkit=false
--mh_lfreq=0
--mh_lnewinc=true
--mh_tciter=-1
--mh_tctime=-1.0
--mh_titer=300
--mh_tobj=-1.0
--mh_ttime=-1.0
--odir=EADARP/out/a8-80
--oname=run8
--only_single_s_visits=true
--repair_max_routes=0
--seed=66902319
--use_milp_in_otf=0
--xcheck_isfeasible=false

EADARPInstance(EADARP/instances/l1/a8-80.txt, n=80, n_K=8, S=[179, 180, 181], Q=14.85, n_F=8, Î³=0.7, T_plan=600.0, F=[171, 172, 173, 174, 175, 176, 177, 178])

T preprocessing time [s]: 3.19363
I       iter             best          obj_old          obj_new        time              method info
I          1     100015.00000     100080.00000     100015.00000      0.2415                 con 
I          4     100014.00000     100015.00000     100014.00000      0.4164        drrr_15+rroi 
I          5     100010.00000     100014.00000     100010.00000      0.5132         drrr_15+rrg 
I          8     100009.00000     100010.00000     100009.00000      0.6662        drrr_15+rroi 
I         11     100008.00000     100009.00000     100008.00000      0.8013         drrr_15+rrg 
I         25     100006.00000     100008.00000     100006.00000      1.1903        drrr_15+rroi 
I         67     100005.00000     100006.00000     100005.00000      1.9203        drrr_15+rrri 
I         73     100004.00000     100005.00000     100004.00000      2.0644        drrr_15+rroi 
I         76     100003.00000     100004.00000     100003.00000      2.1070        drrr_15+rroi 
I         95     100002.00000     100003.00000     100002.00000      2.4966         drrr_15+rrg 
I         97     100001.00000     100002.00000     100001.00000      2.5207        drrr_15+rrri 
I        300     100001.00000     100001.00000     100002.00000      3.5297        drrr_15+rroi 

Method statistics
S  method    iter  succ  succ-rate%  tot-obj-gain  avg-obj-gain  rel-succ%  net-time  net-time%  brut-time  brut-time%
S  con          1     1   100.00000     -65.00000     -65.00000    4.76190   0.24148    6.84144    0.24148     6.84144
S  drrr_15    299    10     3.34448     -14.00000      -0.04682   47.61905   0.00439    0.12424    0.00439     0.12424
S  rrg         99     3     3.03030      -6.00000      -0.06061   14.28571   1.21374   34.38619    1.21374    34.38619
S  rroi       112     5     4.46429      -6.00000      -0.05357   23.80952   1.07827   30.54838    1.07827    30.54838
S  rrri        88     2     2.27273      -2.00000      -0.02273    9.52381   0.99020   28.05323    0.99020    28.05323
S  SUM/AVG    599    21     3.50584     -93.00000      -0.15526   20.00000   3.52808   99.95349    3.52808    99.95349

T best solution: EADARPSolution(t_routing=-1.0, t_excess=-1.0, obj_val=100001.0, obj_val_valid=true,
    unserved_requests=[78], F_visited=[176, 173, 178, 175, 177, 171, 172, 174], S_visited=[181, 179, 180],
    (1, ([163, 69, 149, 16, 96, 68, 6, 86, 148, 80, 160, 73, 153, 51, 131, 56, 59, 136, 139, 54, 134, 35, 20, 100, 115, 61, 45, 125, 141, 181, 15, 95, 10, 90, 21, 24, 1, 104, 101, 81, 171], [142.9616889478983], [30]))
    (2, ([164, 53, 133, 26, 106, 12, 23, 92, 103, 39, 37, 119, 117, 22, 102, 172], Float64[], Int64[]))
    (3, ([165, 3, 47, 83, 127, 44, 124, 19, 28, 99, 108, 66, 146, 62, 142, 173], Float64[], Int64[]))
    (4, ([166, 38, 50, 118, 130, 63, 143, 64, 144, 2, 82, 13, 93, 48, 7, 128, 87, 9, 57, 89, 137, 79, 14, 94, 159, 180, 32, 112, 174], [120.08471620562273], [26]))
    (5, ([167, 76, 156, 31, 30, 111, 110, 34, 114, 72, 77, 152, 157, 11, 91, 5, 75, 85, 25, 155, 105, 74, 154, 27, 107, 179, 49, 4, 129, 84, 175], [138.2332527680119], [26]))
    (6, ([168, 58, 33, 138, 113, 65, 145, 18, 98, 71, 46, 126, 151, 8, 88, 176], Float64[], Int64[]))
    (7, ([169, 55, 135, 29, 109, 41, 121, 36, 43, 116, 123, 70, 150, 177], Float64[], Int64[]))
    (8, ([170, 40, 120, 67, 147, 52, 132, 42, 122, 60, 17, 140, 97, 178], Float64[], Int64[])))

T best obj: 100001.0
T best iteration: 97
T total iterations: 300
T best time [s]: 2.521
T total time [s]: 3.5297
