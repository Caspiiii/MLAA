EADARP version 2def-dirty
ARGS: --ifile=EADARP/instances/l1/a8-80.txt --odir=EADARP/out/a8-80 --oname=run100
Settings:
--alns_gamma=0.025
--alns_segment_size=100
--alns_sigma1=10
--alns_sigma2=9
--alns_sigma3=3
--at_most_one_s=false
--gamma=-1.0
--ifile=EADARP/instances/l1/a8-80.txt
--insert_charging_otf=true
--insert_cost_noise=0.014
--lns_init_temp_factor=0.0
--lns_temp_dec_factor=0.99
--mh_checkit=false
--mh_lfreq=0
--mh_lnewinc=true
--mh_tciter=-1
--mh_tctime=-1.0
--mh_titer=300
--mh_tobj=-1.0
--mh_ttime=-1.0
--odir=EADARP/out/a8-80
--oname=run100
--only_single_s_visits=true
--repair_max_routes=0
--seed=990998746
--use_milp_in_otf=0
--xcheck_isfeasible=false

EADARPInstance(EADARP/instances/l1/a8-80.txt, n=80, n_K=8, S=[179, 180, 181], Q=14.85, n_F=8, Î³=0.7, T_plan=600.0, F=[171, 172, 173, 174, 175, 176, 177, 178])

T preprocessing time [s]: 3.17987
I       iter             best          obj_old          obj_new        time              method info
I          1     100011.00000     100080.00000     100011.00000      0.2820                 con 
I          4     100010.00000     100011.00000     100010.00000      0.5787         drrr_15+rrg 
I          5     100009.00000     100010.00000     100009.00000      0.6930         drrr_15+rrg 
I         25     100008.00000     100009.00000     100008.00000      1.4378         drrr_15+rrg 
I         30     100007.00000     100008.00000     100007.00000      1.5859        drrr_15+rroi 
I         35     100006.00000     100007.00000     100006.00000      1.7198        drrr_15+rroi 
I         41     100005.00000     100006.00000     100005.00000      1.8169        drrr_15+rroi 
I         53     100004.00000     100005.00000     100004.00000      2.0239        drrr_15+rrri 
I         55     100003.00000     100004.00000     100003.00000      2.0499         drrr_15+rrg 
I         82     100002.00000     100003.00000     100002.00000      2.4980        drrr_15+rroi 
I        167     100001.00000     100002.00000     100001.00000      3.3588        drrr_15+rroi 
I        300     100001.00000     100001.00000     100003.00000      4.1673        drrr_15+rroi 

Method statistics
S  method    iter  succ  succ-rate%  tot-obj-gain  avg-obj-gain  rel-succ%  net-time  net-time%  brut-time  brut-time%
S  con          1     1   100.00000     -69.00000     -69.00000    4.76190   0.28197    6.76619    0.28197     6.76619
S  drrr_15    299    10     3.34448     -10.00000      -0.03344   47.61905   0.00450    0.10788    0.00450     0.10788
S  rrg        114     4     3.50877      -4.00000      -0.03509   19.04762   1.69999   40.79307    1.69999    40.79307
S  rroi        88     5     5.68182      -5.00000      -0.05682   23.80952   0.92568   22.21267    0.92568    22.21267
S  rrri        97     1     1.03093      -1.00000      -0.01031    4.76190   1.25354   30.07990    1.25354    30.07990
S  SUM/AVG    599    21     3.50584     -89.00000      -0.14858   20.00000   4.16567   99.95971    4.16567    99.95971

T best solution: EADARPSolution(t_routing=-1.0, t_excess=-1.0, obj_val=100001.0, obj_val_valid=true,
    unserved_requests=[78], F_visited=[172, 175, 174, 176, 178, 177, 171, 173], S_visited=[179, 181, 180],
    (1, ([163, 76, 156, 31, 111, 40, 120, 67, 55, 135, 147, 13, 3, 93, 48, 83, 128, 61, 141, 27, 107, 9, 57, 89, 137, 79, 14, 94, 159, 179, 171], [159.66536001401738], [30]))
    (2, ([164, 73, 153, 52, 132, 2, 82, 29, 109, 19, 28, 99, 108, 172], Float64[], Int64[]))
    (3, ([165, 58, 33, 138, 113, 16, 96, 72, 77, 152, 157, 11, 91, 54, 134, 35, 5, 85, 115, 25, 105, 181, 18, 98, 71, 15, 95, 151, 8, 21, 1, 88, 101, 81, 173], [147.7281600751395], [22]))
    (4, ([166, 69, 149, 30, 110, 34, 114, 7, 87, 12, 92, 23, 103, 46, 126, 174], Float64[], Int64[]))
    (5, ([167, 50, 68, 148, 130, 64, 80, 160, 51, 144, 131, 56, 59, 136, 139, 20, 100, 26, 75, 106, 155, 74, 154, 180, 36, 43, 123, 116, 10, 90, 24, 104, 175], [146.23078595082225], [24]))
    (6, ([168, 6, 86, 42, 122, 65, 145, 60, 17, 140, 97, 70, 150, 49, 4, 129, 84, 176], Float64[], Int64[]))
    (7, ([169, 38, 118, 53, 133, 45, 125, 66, 146, 41, 121, 62, 142, 32, 112, 177], Float64[], Int64[]))
    (8, ([170, 63, 143, 47, 127, 44, 124, 39, 37, 119, 117, 22, 102, 178], Float64[], Int64[])))

T best obj: 100001.0
T best iteration: 167
T total iterations: 300
T best time [s]: 3.359
T total time [s]: 4.1674
