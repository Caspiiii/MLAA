EADARP version 2def-dirty
ARGS: --ifile=EADARP/instances/l1/a8-80.txt --odir=EADARP/out/a8-80 --oname=run9
Settings:
--alns_gamma=0.025
--alns_segment_size=100
--alns_sigma1=10
--alns_sigma2=9
--alns_sigma3=3
--at_most_one_s=false
--gamma=-1.0
--ifile=EADARP/instances/l1/a8-80.txt
--insert_charging_otf=true
--insert_cost_noise=0.014
--lns_init_temp_factor=0.0
--lns_temp_dec_factor=0.99
--mh_checkit=false
--mh_lfreq=0
--mh_lnewinc=true
--mh_tciter=-1
--mh_tctime=-1.0
--mh_titer=300
--mh_tobj=-1.0
--mh_ttime=-1.0
--odir=EADARP/out/a8-80
--oname=run9
--only_single_s_visits=true
--repair_max_routes=0
--seed=1202536462
--use_milp_in_otf=0
--xcheck_isfeasible=false

EADARPInstance(EADARP/instances/l1/a8-80.txt, n=80, n_K=8, S=[179, 180, 181], Q=14.85, n_F=8, Î³=0.7, T_plan=600.0, F=[171, 172, 173, 174, 175, 176, 177, 178])

T preprocessing time [s]: 3.1777
I       iter             best          obj_old          obj_new        time              method info
I          1     100012.00000     100080.00000     100012.00000      0.2139                 con 
I          6     100011.00000     100012.00000     100011.00000      0.5233         drrr_15+rrg 
I         11     100010.00000     100011.00000     100010.00000      0.7488         drrr_15+rrg 
I         12     100009.00000     100010.00000     100009.00000      0.7887        drrr_15+rroi 
I         13     100008.00000     100009.00000     100008.00000      0.8683        drrr_15+rroi 
I         21     100007.00000     100008.00000     100007.00000      1.1288         drrr_15+rrg 
I         53     100006.00000     100007.00000     100006.00000      1.7888        drrr_15+rrri 
I         55     100005.00000     100006.00000     100005.00000      1.8588        drrr_15+rrri 
I        101     100004.00000     100005.00000     100004.00000      2.6880        drrr_15+rroi 
I        135     100003.00000     100004.00000     100003.00000      3.1552        drrr_15+rroi 
I        190     100002.00000     100003.00000     100002.00000      3.7806        drrr_15+rrri 
I        300     100002.00000     100002.00000     100002.00000      4.4626         drrr_15+rrg 

Method statistics
S  method    iter  succ  succ-rate%  tot-obj-gain  avg-obj-gain  rel-succ%  net-time  net-time%  brut-time  brut-time%
S  con          1     1   100.00000     -68.00000     -68.00000    4.76190   0.21384    4.79189    0.21384     4.79189
S  drrr_15    299    10     3.34448     -10.00000      -0.03344   47.61905   0.00460    0.10309    0.00460     0.10309
S  rrg        102     3     2.94118      -3.00000      -0.02941   14.28571   1.46407   32.80772    1.46407    32.80772
S  rroi        97     4     4.12371      -4.00000      -0.04124   19.04762   1.35204   30.29717    1.35204    30.29717
S  rrri       100     3     3.00000      -3.00000      -0.03000   14.28571   1.42628   31.96083    1.42628    31.96083
S  SUM/AVG    599    21     3.50584     -88.00000      -0.14691   20.00000   4.46083   99.96071    4.46083    99.96071

T best solution: EADARPSolution(t_routing=-1.0, t_excess=-1.0, obj_val=100002.0, obj_val_valid=true,
    unserved_requests=[78, 10], F_visited=[178, 171, 173, 177, 176, 174, 172, 175], S_visited=[180, 181, 179],
    (1, ([163, 38, 50, 118, 130, 34, 114, 72, 152, 20, 100, 48, 7, 128, 87, 45, 125, 180, 39, 37, 119, 117, 22, 102, 1, 81, 171], [124.70451511314477], [18]))
    (2, ([164, 53, 133, 26, 106, 9, 57, 89, 137, 12, 92, 23, 103, 46, 126, 62, 142, 172], Float64[], Int64[]))
    (3, ([165, 76, 156, 31, 30, 111, 110, 77, 55, 135, 157, 52, 132, 59, 139, 54, 134, 35, 29, 25, 115, 109, 105, 74, 154, 19, 28, 99, 108, 60, 17, 140, 97, 181, 173], [169.71919375182708], [34]))
    (4, ([166, 41, 121, 36, 43, 116, 123, 70, 150, 49, 4, 129, 84, 174], Float64[], Int64[]))
    (5, ([167, 58, 33, 138, 113, 16, 40, 96, 120, 67, 147, 56, 136, 13, 93, 3, 47, 83, 127, 61, 141, 27, 107, 14, 79, 94, 159, 66, 146, 179, 175], [149.66448466977315], [30]))
    (6, ([168, 68, 6, 86, 148, 64, 144, 51, 131, 2, 82, 44, 124, 32, 112, 176], Float64[], Int64[]))
    (7, ([169, 69, 149, 65, 145, 18, 98, 71, 15, 95, 151, 8, 21, 24, 88, 104, 101, 177], Float64[], Int64[]))
    (8, ([170, 63, 143, 80, 73, 153, 160, 11, 91, 5, 85, 75, 155, 42, 122, 178], Float64[], Int64[])))

T best obj: 100002.0
T best iteration: 190
T total iterations: 300
T best time [s]: 3.781
T total time [s]: 4.4626
